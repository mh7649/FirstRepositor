1、IO   (Input和Output)，输入输出
	文件的输入输出：输出就是指从内存中把数据保存到文件中
									输入就是指从文件中把数据读取到内存中
		以内存为中心，输入就是读入到内存，输出就是从内存中读出
		
2、包文件：
	java.io，输入输出的包，性能比较低，阻塞式的输入输出
	java.nio，the new input and output，性能更高，非阻塞式的输入输出

3、java.io.File，是JDK提供的与电脑中的任何一个文件对应的类，目录

	直接参考FileTest.java类

4、java.io.RandomAccessFile	
	随机读取文件类
	
	读取模式：
 	"r" 以只读方式打开。调用结果对象的任何 write 方法都将导 致抛出 IOException。  
	"rw" 打开以便读取和写入。如果该文件尚不存在，则尝试创建该文件。  
	"rws" 打开以便读取和写入，对于 "rw"，还要求对文件的内容或元数据的每个更新都同步写入到底层存储设备。  
	"rwd"   打开以便读取和写入，对于 "rw"，还要求对文件内容的每个更新都同步写入到底层存储设备。  
	"rw+" 追加文件到末尾
	
	EOF  enf of file 文件格式 
	
5、字节流，字符流
	java.io.InputStream(字节输入流)
		*****java.io.FileInputStream文件输入流
		java.io.ByteArrayInputStream字节数组输入流
		*****java.io.ObjectInputStream对象输入流，从文件里面读取数据直接转换成一个对象
		
	java.io.OutputStream(字节输出流)
		*******java.io.FileOutputStream文件输出流
		**java.io.ByteArrayOutputStream字节数组输出流
		*******java.io.ObjectOutputStream，直接把一个对象保存到文件里
		
	java.io.InputStreamReader(字符输入流)
			****java.io.FileReader 字符文件的输入
			java.io.StringReader 字符串输入
			*******java.io.BufferedReader  缓冲输入流（如果文件比较大，则可以缓冲流提升读取或写出的性能）
			
	java.io.OutputStreamWriter(字符输出流)
			***java.io.FileWriter 字符文件的输出
			java.io.StringWriter 字符串输出
			*******java.io.BufferedWriter 缓冲输出流
	
6、对象的序列化与反序列化
	序列化就是指一个对象转化成字节数据
	反序列化就是指把字节数据转化成对象
	
	如果一个对象要保存到文件，或者通过网络进行传输，则此对象必须实现序列化接口，java.io.Serializalbe接口
	
	java.io.Serializable接口内部没有任何方法，这样的接口称之为标识接口，
	
	